cmake_minimum_required(VERSION 3.8)
project(learning_tf2_cpp)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(interfaces REQUIRED)
find_package(rclcpp REQUIRED)
find_package(tf2 REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(turtlesim REQUIRED)



add_executable(robots_tfs src/robots_tfs.cpp)
ament_target_dependencies(
    robots_tfs
    geometry_msgs
    rclcpp
    tf2
    tf2_ros
)

add_executable(robots_sim src/robots_sim.cpp)
ament_target_dependencies(
    robots_sim
    geometry_msgs
    rclcpp
    tf2
)

add_executable(camera_displacement_publisher src/camera_displacement_publisher.cpp)
ament_target_dependencies(
    camera_displacement_publisher
    geometry_msgs
    interfaces
    rclcpp
    tf2
    tf2_ros
)



install(TARGETS
    robots_tfs
    DESTINATION lib/${PROJECT_NAME})

install(TARGETS
    robots_sim
    DESTINATION lib/${PROJECT_NAME})

install(TARGETS
    camera_displacement_publisher
    DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY launch
  DESTINATION share/${PROJECT_NAME})

install(DIRECTORY rviz
  DESTINATION share/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
